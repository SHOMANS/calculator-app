{"version":3,"sources":["component/Input/index.jsx","component/Btns/Btn.jsx","component/Btns/index.jsx","component/utils.js","component/Main/index.jsx","pages/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","this","props","inInput1","inInput2","calculation","press","myRef","className","type","autoFocus","value","onKeyPress","event","ref","readOnly","React","Component","Btn","content","click","onClick","name","Main","state","calculate","plus","minus","multiplied","divided","AC","percentage","plusMinus","operators","Enter","numbers","1","2","3","4","5","6","7","8","9","0","setState","prevState","e","_name","target","Number","minusFunc","dividedFunc","preventDefault","pressed","key","createRef","current","focus","Btns","MainPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0155f7c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./style.css\";\n\nclass Input extends React.Component {\n  render() {\n    const { inInput1, inInput2, calculation, press, myRef } = this.props;\n    return (\n      <textarea\n        className=\"input-output\"\n        type=\"text\"\n        autoFocus\n        value={`${inInput1 || \"\"}${calculation}${inInput2}`}\n        onKeyPress={(event) => press(event)}\n        ref={myRef}\n        readOnly\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\n\nclass Btn extends React.Component {\n  render() {\n    const { className, content, click } = this.props;\n    return (\n      <button className={className} onClick={click} name={content}>\n        {content}\n      </button>\n    );\n  }\n}\n\nexport default Btn;\n","import React from \"react\";\nimport Btn from \"../Btns/Btn\";\n\nimport \"./style.css\";\n\nclass Main extends React.Component {\n  state = {};\n  render() {\n    const {\n      click,\n      calculate,\n      plus,\n      minus,\n      multiplied,\n      divided,\n      AC,\n      percentage,\n      plusMinus,\n    } = this.props;\n    return (\n      <div className=\"btns\">\n        <Btn click={AC} content=\"AC\" className=\"light-purple\" />\n        <Btn click={plusMinus} content=\"+/-\" className=\"light-purple\" />\n        <Btn click={percentage} content=\"%\" className=\"light-purple\" />\n        <Btn click={divided} content=\"รท\" className=\"dark-purple\" />\n        <Btn click={click} content=\"7\" className=\"dark-brown\" />\n        <Btn click={click} content=\"8\" className=\"dark-brown\" />\n        <Btn click={click} content=\"9\" className=\"dark-brown\" />\n        <Btn click={multiplied} content=\"ร\" className=\"dark-purple\" />\n        <Btn click={click} content=\"4\" className=\"dark-brown\" />\n        <Btn click={click} content=\"5\" className=\"dark-brown\" />\n        <Btn click={click} content=\"6\" className=\"dark-brown\" />\n        <Btn click={minus} content=\"-\" className=\"dark-purple\" />\n        <Btn click={click} content=\"1\" className=\"dark-brown\" />\n        <Btn click={click} content=\"2\" className=\"dark-brown\" />\n        <Btn click={click} content=\"3\" className=\"dark-brown\" />\n        <Btn click={plus} content=\"+\" className=\"dark-purple\" />\n        <Btn click={click} content=\"0\" className=\"dark-brown-zero\" />\n        <Btn click={click} content=\".\" className=\"dark-brown\" />\n        <Btn click={calculate} content=\"=\" className=\"dark-purple\" />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","const numbers = {\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n  0: \"0\",\n  \".\": \".\",\n};\nexport const operators = {\n  \"+\": \"plus\",\n  \"-\": \"minus\",\n  \"*\": \"multiplied\",\n  \"/\": \"divided\",\n  Enter: \"calculate\",\n};\n\nexport default numbers;\n","import React from \"react\";\nimport Input from \"../Input/index\";\nimport Btns from \"../Btns/index\";\nimport numbers, { operators } from \"../utils\";\n\nimport \"./style.css\";\n\nclass Main extends React.Component {\n  state = {\n    inInput1: \"\",\n    inInput2: \"0\",\n    calculation: \"\",\n  };\n\n  AC = () => {\n    this.setState(() => {\n      return { inInput1: \"\", inInput2: \"0\", calculation: \"\" };\n    });\n  };\n\n  plusMinus = () => {\n    this.setState((prevState) => {\n      return {\n        inInput2: prevState.inInput2 * -1,\n        inInput1: prevState.inInput1 * -1,\n      };\n    });\n  };\n\n  percentage = () => {\n    this.setState((prevState) => {\n      return { inInput2: prevState.inInput2 / 100 };\n    });\n  };\n\n  click = (e, name) => {\n    let _name = name;\n    if (!_name) {\n      _name = e.target.name;\n    }\n    this.setState((prevState) => {\n      if (this.state.inInput2 === \"0\") {\n        return { inInput2: `${_name}` };\n      }\n      return { inInput2: `${prevState.inInput2}${_name}` };\n    });\n  };\n\n  plus = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1: Number(prevState.inInput1) + Number(prevState.inInput2),\n        inInput2: \"\",\n        calculation: \"+\",\n      };\n    });\n  };\n\n  minus = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1: Number(prevState.inInput2) - Number(prevState.inInput1),\n        inInput2: \"\",\n        calculation: \"-\",\n      };\n    });\n  };\n\n  minusFunc = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1: Number(prevState.inInput1) - Number(prevState.inInput2),\n        inInput2: \"\",\n        calculation: \"-\",\n      };\n    });\n  };\n\n  multiplied = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1:\n          Number(prevState.inInput2) * (Number(prevState.inInput1) || 1),\n        inInput2: \"\",\n        calculation: \"ร\",\n      };\n    });\n  };\n\n  divided = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1:\n          Number(prevState.inInput2) / (Number(prevState.inInput1) || 1),\n        inInput2: \"\",\n        calculation: \"รท\",\n      };\n    });\n  };\n\n  dividedFunc = () => {\n    this.setState((prevState) => {\n      return {\n        inInput1:\n          (Number(prevState.inInput1) || 1) / Number(prevState.inInput2),\n        inInput2: \"\",\n        calculation: \"รท\",\n      };\n    });\n  };\n\n  calculate = () => {\n    if (this.state.calculation === \"+\") {\n      this.plus();\n    }\n    if (this.state.calculation === \"-\") {\n      this.minusFunc();\n    }\n    if (this.state.calculation === \"ร\") {\n      this.multiplied();\n    }\n    if (this.state.calculation === \"รท\") {\n      this.dividedFunc();\n    }\n    this.setState(() => {\n      return {\n        calculation: \"\",\n      };\n    });\n  };\n\n  press = (event) => {\n    event.preventDefault();\n    const pressed = event.key;\n    if (numbers[pressed]) {\n      this.click(null, pressed);\n    }\n    if (operators[pressed]) {\n      this[operators[pressed]]();\n    }\n  };\n\n  myRef = React.createRef();\n\n  componentDidUpdate() {\n    const node = this.myRef.current;\n    node.focus();\n  }\n\n  render() {\n    const { inInput1, inInput2, calculation } = this.state;\n    return (\n      <main className=\"main\">\n        <Input\n          inInput1={inInput1}\n          inInput2={inInput2}\n          calculation={calculation}\n          press={this.press}\n          myRef={this.myRef}\n        />\n        <Btns\n          click={this.click}\n          plus={this.plus}\n          minus={this.minus}\n          multiplied={this.multiplied}\n          divided={this.divided}\n          calculate={this.calculate}\n          AC={this.AC}\n          percentage={this.percentage}\n          plusMinus={this.plusMinus}\n        />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"../component/Main/index\";\nimport \"./style.css\";\n\nfunction MainPage() {\n  return (\n    <div className=\"all\">\n      <Main />\n      <Main />\n      <Main />\n    </div>\n  );\n}\nexport default MainPage;\n","import React from \"react\";\nimport MainPage from \"./pages/MainPage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return <MainPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}